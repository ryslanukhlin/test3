{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { Container } from \"@material-ui/core\";\nimport CommentForm from \"../../component/CommentForm\";\nimport style from \"../../style/pizzaItem.module.scss\";\nimport ItemPizzaId from \"../../component/ItemPizzaId\";\nimport io from \"socket.io-client\";\nimport Comments from \"../../component/Comments\";\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\nimport { useSnackbar } from 'notistack';\nimport getConfig from \"next/config\";\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar PagesPizza = function PagesPizza(_ref) {\n  var data = _ref.data;\n\n  var _useTypedSelector = useTypedSelector(function (state) {\n    return state.userReducer;\n  }),\n      user = _useTypedSelector.user,\n      isAuth = _useTypedSelector.isAuth;\n\n  var _React$useState = React.useState(data),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pizza = _React$useState2[0],\n      setPizza = _React$useState2[1];\n\n  var socketRef = React.useRef();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  React.useEffect(function () {\n    if (true) {\n      socketRef.current = io(publicRuntimeConfig.backendUri);\n      socketRef.current.emit(\"COMMENT:ROOM\", data._id);\n      socketRef.current.on(\"COMMENT:REFRESH\", function (product) {\n        return setPizza(product);\n      });\n    }\n\n    return function () {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  var addComment = function addComment(text, e) {\n    if (!isAuth) return enqueueSnackbar(\"Чтобы добавить кометарий вы должны войти\", {\n      variant: \"error\"\n    });\n    if (text === \"\") return enqueueSnackbar(\"Введите что-нибудь\", {\n      variant: \"error\"\n    });\n    socketRef.current.emit('COMMENT:ADD', {\n      text: text,\n      userId: user._id,\n      productId: data._id\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsx(ItemPizzaId, {\n      data: pizza\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style.customHr\n    }), /*#__PURE__*/_jsx(CommentForm, {\n      addComment: addComment\n    }), /*#__PURE__*/_jsx(Comments, {\n      comments: pizza.comments\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default PagesPizza;","map":null,"metadata":{},"sourceType":"module"}