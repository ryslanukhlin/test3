{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D\\\\Desktop\\\\NestAndNextShopPizza\\\\frontend\\\\component\\\\Auth\\\\Register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport style from '../../style/auth.module.scss';\nimport getConfig from 'next/config';\nimport { useSnackbar } from 'notistack';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar RegisterPage = function RegisterPage(_ref) {\n  _s();\n\n  var goLogin = _ref.goLogin;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _React$useState = React.useState({\n    nicname: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      registerForm = _React$useState2[0],\n      setRegisterForm = _React$useState2[1];\n\n  var changeForm = function changeForm(e) {\n    setRegisterForm(_objectSpread(_objectSpread({}, registerForm), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var register = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, clearForm, orderItem, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(registerForm.password !== registerForm.repeatPassword)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", enqueueSnackbar('passwords don\\'t match', {\n                variant: \"error\"\n              }));\n\n            case 2:\n              _context.next = 4;\n              return fetch(publicRuntimeConfig.backendUri + \"/users\", {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_objectSpread({}, registerForm))\n              });\n\n            case 4:\n              response = _context.sent;\n\n              if (response.status === 201) {\n                enqueueSnackbar('registration was successful', {\n                  variant: \"success\"\n                });\n                clearForm = registerForm;\n\n                for (orderItem in registerForm) {\n                  clearForm[orderItem] = \"\";\n                }\n\n                setRegisterForm(_objectSpread({}, clearForm));\n              }\n\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              data = _context.sent;\n\n              if (response.status === 400) {\n                data.message.map(function (err) {\n                  enqueueSnackbar(err, {\n                    variant: \"error\"\n                  });\n                });\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function register() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043D\\u0430 FamulyPizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: registerForm.nicname,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      label: \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n      name: \"nicname\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: registerForm.email,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      label: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: registerForm.password,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: registerForm.repeatPassword,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"repeatPassword\",\n      label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: register,\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.modalFooter,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: style.customLink,\n          variant: \"inherit\",\n          onClick: goLogin,\n          children: \"\\u0412\\u044B \\u0438\\u043C\\u0435\\u0435\\u0442\\u0435 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegisterPage, \"0772jssEfctZzTR8HhtveLxBAow=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/Руслан/Desktop/NestAndNextShopPizza/frontend/component/Auth/Register.tsx"],"names":["Button","Grid","TextField","Typography","React","style","getConfig","useSnackbar","publicRuntimeConfig","RegisterPage","goLogin","enqueueSnackbar","useState","nicname","email","password","repeatPassword","registerForm","setRegisterForm","changeForm","e","target","name","value","register","variant","fetch","backendUri","method","headers","body","JSON","stringify","response","status","clearForm","orderItem","json","data","message","map","err","modalFooter","customLink"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { MouseEventHandler } from 'react';\r\nimport style from '../../style/auth.module.scss';\r\nimport { TRegisterForm } from '../../types/form/register-form.type';\r\nimport getConfig from 'next/config'\r\nimport {SnackbarKey, useSnackbar} from 'notistack';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst RegisterPage: React.FC<{ goLogin: MouseEventHandler }> = ({ goLogin }) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [registerForm, setRegisterForm] = React.useState<TRegisterForm>({\r\n        nicname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\"\r\n    })\r\n\r\n    const changeForm = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setRegisterForm({...registerForm, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const register = async (): Promise<void | SnackbarKey> => {\r\n        if(registerForm.password !== registerForm.repeatPassword) {\r\n            return enqueueSnackbar('passwords don\\'t match', { variant: \"error\" })\r\n        }\r\n        const response = await fetch(publicRuntimeConfig.backendUri + \"/users\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({...registerForm})\r\n        });\r\n\r\n        if(response.status === 201){\r\n            enqueueSnackbar('registration was successful', { variant: \"success\" })\r\n            let clearForm: TRegisterForm = registerForm;\r\n            for(let orderItem in registerForm){\r\n                clearForm[orderItem] = \"\"\r\n            }\r\n            setRegisterForm({...clearForm})\r\n        }\r\n        const data = await response.json()\r\n        if(response.status === 400){\r\n            data.message.map(err => {\r\n                enqueueSnackbar(err, { variant: \"error\" })\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Регистрация на FamulyPizza</Typography>\r\n            <TextField\r\n                value={registerForm.nicname}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Никнейм\"\r\n                name=\"nicname\"\r\n            />\r\n            <TextField\r\n                value={registerForm.email}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Почта\"\r\n                name=\"email\"\r\n            />\r\n            <TextField\r\n                value={registerForm.password}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n            />\r\n            <TextField\r\n                value={registerForm.repeatPassword}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"repeatPassword\"\r\n                label=\"Повторите пароль\"\r\n                type=\"password\"\r\n            />\r\n            <Button\r\n                onClick={register}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Зарегестрироваться\r\n            </Button>\r\n            <Grid container className={style.modalFooter}>\r\n                <Grid item xs />\r\n                <Grid item>\r\n                    <Typography className={style.customLink} variant=\"inherit\" onClick={goLogin}>\r\n                        Вы имеете аккаунт? Войдите\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n"]},"metadata":{},"sourceType":"module"}