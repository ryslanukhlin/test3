{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../store/index\";\nimport NavBar from \"../component/Navbar\";\nimport \"../style/index.scss\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useAction } from \"../hooks/useAction\";\nimport { SnackbarProvider } from 'notistack';\nimport getConfig from \"next/config\";\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFDE03'\n    },\n    secondary: {\n      main: '#0036FF'\n    }\n  }\n});\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    addPizzaToBasket,\n    LoginLocal,\n    setUserLocal,\n    Logout\n  } = useAction();\n  React.useEffect(() => {\n    const pizzaBasket = JSON.parse(localStorage.getItem('pizzaBasket'));\n    if (pizzaBasket) pizzaBasket.map(item => addPizzaToBasket(item));\n    const token = localStorage.getItem('token');\n\n    if (token !== null) {\n      LoginLocal(token);\n      setUser(token);\n    }\n  }, []);\n\n  const setUser = async token => {\n    const response = await fetch(publicRuntimeConfig.backendUri + \"/auth\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n\n    if (response.status === 200) {\n      setUserLocal(await response.json());\n    } else {\n      Logout();\n    }\n  };\n\n  React.useEffect(() => {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentElement) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return /*#__PURE__*/_jsx(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsx(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxs(SnackbarProvider, {\n        maxSnack: 10,\n        children: [/*#__PURE__*/_jsx(NavBar, {}), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            marginTop: 70\n          },\n          children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        })]\n      })\n    })\n  });\n};\n\nconst makeStore = () => store;\n\nconst wrapper = createWrapper(makeStore);\nexport default wrapper.withRedux(MyApp);","map":null,"metadata":{},"sourceType":"module"}