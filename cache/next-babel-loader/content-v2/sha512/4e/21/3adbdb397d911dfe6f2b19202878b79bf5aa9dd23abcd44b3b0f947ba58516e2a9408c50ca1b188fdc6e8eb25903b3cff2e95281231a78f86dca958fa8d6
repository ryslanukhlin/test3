{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D/Desktop/NestAndNextShopPizza/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u0443\\u0441\\u043B\\u0430\\u043D\\\\Desktop\\\\NestAndNextShopPizza\\\\frontend\\\\component\\\\Auth\\\\Login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Button, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport style from '../../style/auth.module.scss';\nimport getConfig from 'next/config';\nimport { useSnackbar } from 'notistack';\nimport { useAction } from '../../hooks/useAction';\nimport GoogleLogin from \"react-google-login\";\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar LoginPage = function LoginPage(_ref) {\n  _s();\n\n  var goRegister = _ref.goRegister,\n      handleClose = _ref.handleClose;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      remMe = _React$useState2[0],\n      setRemMe = _React$useState2[1];\n\n  var _useAction = useAction(),\n      LoginLocal = _useAction.LoginLocal,\n      LoginGoogle = _useAction.LoginGoogle,\n      setUserLocal = _useAction.setUserLocal;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _React$useState3 = React.useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loginForm = _React$useState4[0],\n      setLoginForm = _React$useState4[1];\n\n  var changeForm = function changeForm(e) {\n    setLoginForm(_objectSpread(_objectSpread({}, loginForm), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var login = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(publicRuntimeConfig.backendUri + \"/auth\", {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_objectSpread({}, loginForm))\n              });\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.status !== 201)) {\n                _context.next = 7;\n                break;\n              }\n\n              enqueueSnackbar(\"invalid password or email\", {\n                variant: \"error\"\n              });\n              _context.next = 14;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              data = _context.sent;\n              LoginLocal(data.access_token);\n              handleClose();\n              if (remMe) localStorage.setItem('token', data.access_token);\n              setUser(data.access_token);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var setUser = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(publicRuntimeConfig.backendUri + \"/auth\", {\n                method: \"GET\",\n                headers: {\n                  'Authorization': 'Bearer ' + token\n                }\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.t0 = setUserLocal;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              _context2.t1 = _context2.sent;\n              (0, _context2.t0)(_context2.t1);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function setUser(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var responseSuccessGoogle = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(resolve) {\n      var _resolve$profileObj, email, name, googleId, imageUrl, response;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _resolve$profileObj = resolve.profileObj, email = _resolve$profileObj.email, name = _resolve$profileObj.name, googleId = _resolve$profileObj.googleId, imageUrl = _resolve$profileObj.imageUrl;\n              _context3.next = 3;\n              return fetch(publicRuntimeConfig.backendUri + '/users/google', {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: email,\n                  googleId: googleId,\n                  nicname: name,\n                  icon: imageUrl\n                })\n              });\n\n            case 3:\n              response = _context3.sent;\n              _context3.t0 = LoginGoogle;\n              _context3.next = 7;\n              return response.json();\n\n            case 7:\n              _context3.t1 = _context3.sent;\n              (0, _context3.t0)(_context3.t1);\n              handleClose();\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function responseSuccessGoogle(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var responseErrorGoogle = function responseErrorGoogle() {\n    enqueueSnackbar(\"не удалось войти в гугл\", {\n      variant: \"error\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"\\u0412\\u0445\\u043E\\u0434 \\u043D\\u0430 FamulyPizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: loginForm.email,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      autoComplete: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: loginForm.password,\n      onChange: changeForm,\n      size: \"small\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: remMe,\n      onChange: setRemMe.bind(null, function (prev) {\n        return !prev;\n      }),\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: \"remember\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }, _this),\n      label: \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: login,\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.modalFooter,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: style.customLink,\n          variant: \"inherit\",\n          onClick: goRegister,\n          children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0443\\u0447\\u0435\\u0442\\u043D\\u043E\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      className: style.auth__google,\n      clientId: \"1039089113540-k5pkcpnsa4eq6446risiup8sh6cn418g.apps.googleusercontent.com\",\n      buttonText: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0447\\u0435\\u0440\\u0435\\u0437 google\",\n      onSuccess: responseSuccessGoogle,\n      onFailure: responseErrorGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoginPage, \"RTycMFbeLOIc7qylFlgUZgnTbfI=\", false, function () {\n  return [useAction, useSnackbar];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Руслан/Desktop/NestAndNextShopPizza/frontend/component/Auth/Login.tsx"],"names":["React","Button","Checkbox","FormControlLabel","Grid","TextField","Typography","style","getConfig","useSnackbar","useAction","GoogleLogin","publicRuntimeConfig","LoginPage","goRegister","handleClose","useState","remMe","setRemMe","LoginLocal","LoginGoogle","setUserLocal","enqueueSnackbar","email","password","loginForm","setLoginForm","changeForm","e","target","name","value","login","fetch","backendUri","method","headers","body","JSON","stringify","response","status","variant","json","data","access_token","localStorage","setItem","setUser","token","responseSuccessGoogle","resolve","profileObj","googleId","imageUrl","nicname","icon","responseErrorGoogle","bind","prev","modalFooter","customLink","auth__google"],"mappings":"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","sourcesContent":["import React, { MouseEventHandler } from 'react';\r\nimport { Button, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\r\nimport style from '../../style/auth.module.scss';\r\nimport { TLoginForm } from '../../types/form/login-form.type';\r\nimport getConfig from 'next/config'\r\nimport { useSnackbar } from 'notistack';\r\nimport { useAction } from '../../hooks/useAction';\r\nimport GoogleLogin, { GoogleLoginResponse } from \"react-google-login\";\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst LoginPage: React.FC<{ goRegister: MouseEventHandler, handleClose: Function}> = ({ goRegister, handleClose }) => {\r\n    const [remMe, setRemMe] = React.useState<boolean>(false);\r\n    const { LoginLocal, LoginGoogle, setUserLocal } = useAction();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [loginForm, setLoginForm] = React.useState<TLoginForm>({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const changeForm = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setLoginForm({...loginForm, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const login = async (): Promise<void> => {\r\n        const response = await fetch(publicRuntimeConfig.backendUri + \"/auth\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({...loginForm})\r\n        });\r\n        if(response.status !== 201){\r\n            enqueueSnackbar(\"invalid password or email\", { variant: \"error\" });\r\n        } else {\r\n            const data = await response.json()\r\n            LoginLocal(data.access_token)\r\n            handleClose()\r\n            if (remMe) localStorage.setItem('token', data.access_token);\r\n            setUser(data.access_token)\r\n        }\r\n    }\r\n\r\n    const setUser = async (token: string) => {\r\n        const response = await fetch(publicRuntimeConfig.backendUri + \"/auth\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            }\r\n        })\r\n        setUserLocal(await response.json());\r\n    }\r\n\r\n    const responseSuccessGoogle = async (resolve: GoogleLoginResponse): Promise<void> => {\r\n        const {email, name, googleId, imageUrl} = resolve.profileObj\r\n        const response = await fetch(publicRuntimeConfig.backendUri + '/users/google', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({email, googleId, nicname: name, icon: imageUrl})\r\n        })\r\n        LoginGoogle(await response.json())\r\n        handleClose()\r\n    }\r\n    \r\n    const responseErrorGoogle = (): void => {\r\n        enqueueSnackbar(\"не удалось войти в гугл\", { variant: \"error\" });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Вход на FamulyPizza</Typography>\r\n            <TextField\r\n                value={loginForm.email}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Почта\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n            />\r\n            <TextField\r\n                value={loginForm.password}\r\n                onChange={changeForm}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n                value={remMe}\r\n                onChange={setRemMe.bind(null, prev => !prev)}\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Запомнить меня\"\r\n            />\r\n            <Button\r\n                onClick={login}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Войти\r\n            </Button>\r\n            <Grid container className={style.modalFooter}>\r\n                <Grid item xs />\r\n                <Grid item>\r\n                    <Typography className={style.customLink} variant=\"inherit\" onClick={goRegister}>\r\n                        У вас нет учетной записи? Зарегестрироваться\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <GoogleLogin\r\n                className={style.auth__google}\r\n                clientId=\"1039089113540-k5pkcpnsa4eq6446risiup8sh6cn418g.apps.googleusercontent.com\"\r\n                buttonText=\"Войти через google\"\r\n                onSuccess={responseSuccessGoogle}\r\n                onFailure={responseErrorGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n"]},"metadata":{},"sourceType":"module"}