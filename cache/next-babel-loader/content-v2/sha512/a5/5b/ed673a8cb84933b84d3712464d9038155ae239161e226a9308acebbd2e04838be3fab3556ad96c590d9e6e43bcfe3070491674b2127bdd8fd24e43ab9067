{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EnumLoginType, UserActionEnum } from \"../../types/reducer/userReducer.type\";\nconst defaultState = {\n  typeLogin: EnumLoginType.LOCAL,\n  isAuth: false,\n  token: null,\n  user: null\n};\nexport const userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case UserActionEnum.LOGIN_LOCAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: action.payload,\n        isAuth: true,\n        typeLogin: EnumLoginType.LOCAL\n      });\n\n    case UserActionEnum.LOGIN_GOOGLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload,\n        isAuth: true,\n        typeLogin: EnumLoginType.GOOGLE\n      });\n\n    case UserActionEnum.LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        isAuth: false\n      });\n\n    case UserActionEnum.SET_USER_LOCAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const LoginLocal = token => ({\n  type: UserActionEnum.LOGIN_LOCAL,\n  payload: token\n});\nexport const LoginGoogle = user => ({\n  type: UserActionEnum.LOGIN_GOOGLE,\n  payload: user\n});\nexport const setUserLocal = user => ({\n  type: UserActionEnum.SET_USER_LOCAL,\n  payload: user\n});\nexport const Logout = () => ({\n  type: UserActionEnum.LOGOUT\n});","map":null,"metadata":{},"sourceType":"module"}